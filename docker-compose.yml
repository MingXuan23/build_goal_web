version: '3.8'

services:
  # Node.js Application
  nodejs:
    build:
      context: ./nodejs
      dockerfile: Dockerfile
    ports:
      - "30000:3000"
    volumes:
      - ./nodejs:/usr/src/app
    environment:
      - NODE_ENV=docker
      - TZ=Asia/Kuala_Lumpur
    depends_on:
      - mysql
    command: npm run start
    networks:
      - app-network
    image: mxchuah23/nodejs-app:latest

  # Laravel PHP-FPM Application
  laravel-app:
    build:
      context: ./laravel
      dockerfile: docker/app.dockerfile
    working_dir: /var/www
    environment:
      - TZ=Asia/Kuala_Lumpur
    volumes:
      - ./laravel:/var/www:cached
      - ./laravel/storage:/var/www/storage:cached
      - ./laravel/docker/php/php.ini:/usr/local/etc/php/php.ini
    depends_on:
      - mysql
    networks:
      - app-network
    image: mxchuah23/laravel-app:latest

  # Laravel Web Server (Nginx)
  laravel-web:
    build:
      context: ./laravel
      dockerfile: ./docker/web.dockerfile
    working_dir: /var/www
    volumes:
      - ./laravel:/var/www:cached
    depends_on:
      - "laravel-app"
    networks:
      - app-network
    ports:
      - "8080:80"
    environment:
      - TZ=Asia/Kuala_Lumpur
    image: mxchuah23/laravel-web:latest

  # Shared MySQL Database
  mysql:
    image: mysql:8.0
    ports:
      - "${LOCAL_DB_PORT}:3306"
    environment:
      MYSQL_DATABASE: ${LOCAL_DB_NAME}
      MYSQL_ROOT_PASSWORD: ${LOCAL_DB_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${LOCAL_DB_PASSWORD}
      MYSQL_USER: ${LOCAL_DB_USER}
      TZ: Asia/Kuala_Lumpur
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network

   # Ollama Service
  gpt_service:
    image: ollama/ollama
    container_name: gpt_service
    ports:
      - "11434:11434" # Default Ollama port
    networks:
      - app-network
    volumes:
      - ollama-data:/ollama/data

  qdrant:
    image: qdrant/qdrant:latest
    container_name: vector_db
    ports:
      - 6333:6333
      - 6334:6334
    expose:
      - 6333
      - 6334
      - 6335
    configs:
      - source: qdrant_config
        target: /qdrant/config/production.yaml
    networks:
      - app-network
    volumes:
      - ./qdrant_data:/qdrant/storage

configs:
  qdrant_config:
    content: |
      log_level: INFO   

# Docker Networks
networks:
  app-network:
    driver: bridge

# Docker Volumes
volumes:
  mysql-data:
  ollama-data:


# # Node.js App
# docker build -t mxchuah23/build_goal:nodejs ./nodejs

# # Laravel App
# docker build -t mxchuah23/build_goal:laravel-app ./laravel --file ./laravel/docker/app.dockerfile

# # Laravel Web (Nginx)
# docker build -t mxchuah23/build_goal:laravel-web ./laravel --file ./laravel/docker/web.dockerfile

# # Ollama Service
# docker tag ollama/ollama:latest mxchuah23/build_goal:ollama

# # Qdrant (Vector Database)
# docker tag qdrant/qdrant:latest mxchuah23/build_goal:qdrant


# # Node.js App
# docker push mxchuah23/build_goal:nodejs

# # Laravel App
# docker push mxchuah23/build_goal:laravel-app

# # Laravel Web (Nginx)
# docker push mxchuah23/build_goal:laravel-web

# # Ollama Service
# docker push mxchuah23/build_goal:ollama

# # Qdrant (Vector Database)
# docker push mxchuah23/build_goal:qdrant
